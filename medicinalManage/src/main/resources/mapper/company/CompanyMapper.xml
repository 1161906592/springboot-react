<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.medicinalManage.mapper.company.CompanyMapper" >
  <resultMap id="companyVoMap" type="com.medicinalManage.model.company.CompanyVo">
    <id column="company_id" jdbcType="CHAR" property="companyId" />
    <result column="company_name" jdbcType="VARCHAR" property="companyName" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="create_time" jdbcType="VARCHAR" property="createTime" />
  </resultMap>
  <select id="getCompanyListByCompanyName" resultMap="companyVoMap" parameterType="String">
    SELECT company_id, company_name, address, phone, create_time
    FROM company
    WHERE company_name LIKE CONCAT('%',#{companyName},'%')
    ORDER BY create_time DESC
  </select>
  <insert id="addCompany" parameterType="com.medicinalManage.model.company.CompanyDo">
    INSERT INTO company
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        company_id,
      </if>
      <if test="companyName != null">
        company_name,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="phone != null">
        phone,
      </if>
      create_time,
    </trim>
    <trim prefix="SELECT" suffixOverrides=",">
      <if test="companyId != null">
        #{companyId},
      </if>
      <if test="companyName != null">
        #{companyName},
      </if>
      <if test="address != null">
        #{address},
      </if>
      <if test="phone != null">
        #{phone},
      </if>
      now(),
    </trim>
    FROM DUAL WHERE NOT EXISTS (
      SELECT company_id FROM company WHERE company_name = #{companyName}
    )
  </insert>
  <update id="updateCompany" parameterType="com.medicinalManage.model.company.CompanyDo">
    UPDATE company SET
    <trim suffixOverrides=",">
      <if test="companyName != null">
        company_name = #{companyName},
      </if>
      <if test="address != null">
        address = #{address},
      </if>
      <if test="phone != null">
        phone = #{phone},
      </if>
    </trim>
    WHERE company_id = #{companyId} AND NOT EXISTS (
      SELECT a.company_id FROM (
        SELECT company_id FROM company
        WHERE company_id != #{companyId}
        <trim prefix="AND">
          <if test="companyName != null">
            company_name = #{companyName}
          </if>
        </trim>
      ) a
    )
  </update>
  <delete id="deleteCompany" parameterType="String">
    DELETE FROM company
    WHERE company_id = #{companyId}
  </delete>
</mapper>